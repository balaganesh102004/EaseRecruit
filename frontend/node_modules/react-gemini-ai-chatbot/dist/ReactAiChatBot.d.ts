import React from "react";
import { CSSProperties } from "react";



interface IChatBot {
    /**
     * API key for the Gemini AI service.
     */
    geminiApiKey: string;
    /**
     * Custom styles to be applied to the chatbot component.
     * @defaultValue `{}`
     */
    style?: CSSProperties;
    /**
     * Primary color for the chatbot component.
     * @defaultValue `"blueviolet"`
     */
    primaryColor?: string;
    /**
     * Secondary color for the chatbot component.
     * @defaultValue `"rgba(137, 43, 226, 0.321)"`
     */
    secondaryColor?: string;
    /**
     * Text color for the chatbot component.
     * @defaultValue `"#fff"`
     */
    textColor?: string;
    /**
     * Background color for the chatbot component.
     * @defaultValue `"#fff"`
     */
    backgroundColor?: string;
    /**
     * Width of the chatbot component.
     * @defaultValue `"500px"`
     */
    width?: string;
    /**
     * Height of the chatbot component.
     * @defaultValue `"500px"`
     */
    height?: string;
    /**
     * Model name for the Gemini AI service.
     * @defaultValue `"gemini-pro"`
     */
    geminiModel?: string;
    /**
     * Name of the chatbot.
     * @defaultValue `"Golds Gym"`
     */
    chatbotName?: string;
    /**
     * Image URL for the chatbot avatar.
     * @defaultValue `"https://media.istockphoto.com/id/1310380177/vector/avatar-smiling-brunette-nurse-with-bangs-and-bun.jpg?s=612x612&w=0&k=20&c=4lRjm5npCy2qqWHl3iH6CnejQglXkse3O-9ViKrpQ6I="`
     */
    chatBotImg?: string;
    /**
     * Title for the chat interface.
     * @defaultValue `"Ask me anything about our gym service"`
     */
    chatTitle?: string;
    /**
     * Training data for the chatbot. This data is used to train the AI model to understand and respond to user queries.
     * @defaultValue `defaultData`
     */
    trainingData?: any[];
    /**
     * Prompt for the chatbot to use during training. This prompt guides the AI model on how to interact with the user.
     * @defaultValue `prompt`
     */
    trainingPrompt?: string;
    /**
     * A function that returns a JSX element to be used as the loading component.
     * This component is displayed while the chatbot is processing a request.
     * @defaultValue `() => <InfinitySpin color={primaryColor} />`
     */
    loadingComp?: () => JSX.Element;
}
declare function ReactAiChatBot({ geminiApiKey, style, primaryColor, secondaryColor, textColor, backgroundColor, width, height, chatTitle, geminiModel, chatbotName, chatBotImg, trainingData, trainingPrompt, loadingComp, }: IChatBot): React.JSX.Element;
export { ReactAiChatBot };
